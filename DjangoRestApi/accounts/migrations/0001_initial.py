# Generated by Django 3.1.3 on 2020-11-19 16:27

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('mid_name', models.CharField(blank=True, max_length=30, null=True)),
                ('degree', models.IntegerField(choices=[(0, 'Bachelor'), (1, 'Master')], default=0)),
                ('course', models.IntegerField(choices=[(1, 'First'), (2, 'Second'), (3, 'Third'), (4, 'Fourth')], default=0)),
                ('track', models.IntegerField(choices=[(0, 'Computer Science'), (1, 'Robotics'), (2, 'Data Science'), (3, 'Software Engineering'), (4, 'Security'), (5, 'Not Student')], default=0)),
                ('role', models.CharField(choices=[('0', 'administrator'), ('1', 'moderator'), ('2', 'regular')], default='2', max_length=1)),
                ('image', models.ImageField(default='profile_pictures/default.png', upload_to='profile_pictures')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
